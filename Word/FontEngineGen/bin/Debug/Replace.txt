FT_Common.FT_ENCODING_NONE = 0;

FT_Common.FT_ENCODING_MS_SYMBOL = FT_MAKE_TAG("s","y","m","b");
FT_Common.FT_ENCODING_UNICODE = FT_MAKE_TAG("u","n","i","c");

FT_Common.FT_ENCODING_SJIS = FT_MAKE_TAG("s","j","i","s");
FT_Common.FT_ENCODING_GB2312 = FT_MAKE_TAG("g","b"," "," ");
FT_Common.FT_ENCODING_BIG5 = FT_MAKE_TAG("b","i","g","5");
FT_Common.FT_ENCODING_WANSUNG = FT_MAKE_TAG("w","a","n","s");
FT_Common.FT_ENCODING_JOHAB = FT_MAKE_TAG("j","o","h","a");

/* for backwards compatibility */
FT_Common.FT_ENCODING_MS_SJIS    = FT_Common.FT_ENCODING_SJIS;
FT_Common.FT_ENCODING_MS_GB2312  = FT_Common.FT_ENCODING_GB2312;
FT_Common.FT_ENCODING_MS_BIG5    = FT_Common.FT_ENCODING_BIG5;
FT_Common.FT_ENCODING_MS_WANSUNG = FT_Common.FT_ENCODING_WANSUNG;
FT_Common.FT_ENCODING_MS_JOHAB   = FT_Common.FT_ENCODING_JOHAB;

FT_Common.FT_ENCODING_ADOBE_STANDARD = FT_MAKE_TAG("A","D","O","B");
FT_Common.FT_ENCODING_ADOBE_EXPERT = FT_MAKE_TAG("A","D","B","E");
FT_Common.FT_ENCODING_ADOBE_CUSTOM = FT_MAKE_TAG("A","D","B","C");
FT_Common.FT_ENCODING_ADOBE_LATIN_1 = FT_MAKE_TAG("l","a","t","1");

FT_Common.FT_ENCODING_OLD_LATIN_2 = FT_MAKE_TAG("l","a","t","2");

FT_Common.FT_ENCODING_APPLE_ROMAN = FT_MAKE_TAG("a","r","m","n");

// modules types
FT_Common.FT_MODULE_FONT_DRIVER        = 1;
FT_Common.FT_MODULE_RENDERER           = 2;
FT_Common.FT_MODULE_HINTER             = 4;
FT_Common.FT_MODULE_STYLER             = 8;

FT_Common.FT_MODULE_DRIVER_SCALABLE    = 0x100;
FT_Common.FT_MODULE_DRIVER_NO_OUTLINES = 0x200;
FT_Common.FT_MODULE_DRIVER_HAS_HINTER  = 0x400;

// errors codes
FT_Common.FT_Err_Ok                             = 0x00;
FT_Common.FT_Err_Cannot_Open_Resource           = 0x01;
FT_Common.FT_Err_Unknown_File_Format            = 0x02;
FT_Common.FT_Err_Invalid_File_Format            = 0x03;
FT_Common.FT_Err_Invalid_Version                = 0x04;
FT_Common.FT_Err_Lower_Module_Version           = 0x05;
FT_Common.FT_Err_Invalid_Argument               = 0x06;
FT_Common.FT_Err_Unimplemented_Feature          = 0x07;
FT_Common.FT_Err_Invalid_Table                  = 0x08;
FT_Common.FT_Err_Invalid_Offset                 = 0x09;
FT_Common.FT_Err_Array_Too_Large                = 0x0A;

/* glyph/character errors */
FT_Common.FT_Err_Invalid_Glyph_Index            = 0x10;
FT_Common.FT_Err_Invalid_Character_Code         = 0x11;
FT_Common.FT_Err_Invalid_Glyph_Format           = 0x12;
FT_Common.FT_Err_Cannot_Render_Glyph            = 0x13;
FT_Common.FT_Err_Invalid_Outline                = 0x14;
FT_Common.FT_Err_Invalid_Composite              = 0x15;
FT_Common.FT_Err_Too_Many_Hints                 = 0x16;
FT_Common.FT_Err_Invalid_Pixel_Size             = 0x17;

/* handle errors */
FT_Common.FT_Err_Invalid_Handle                 = 0x20;
FT_Common.FT_Err_Invalid_Library_Handle         = 0x21;
FT_Common.FT_Err_Invalid_Driver_Handle          = 0x22;
FT_Common.FT_Err_Invalid_Face_Handle            = 0x23;
FT_Common.FT_Err_Invalid_Size_Handle            = 0x24;
FT_Common.FT_Err_Invalid_Slot_Handle            = 0x25;
FT_Common.FT_Err_Invalid_CharMap_Handle         = 0x26;
FT_Common.FT_Err_Invalid_Cache_Handle           = 0x27;
FT_Common.FT_Err_Invalid_Stream_Handle          = 0x28;

/* driver errors */
FT_Common.FT_Err_Too_Many_Drivers               = 0x30;
FT_Common.FT_Err_Too_Many_Extensions            = 0x31;
/* memory errors */

FT_Common.FT_Err_Out_Of_Memory                  = 0x40;
FT_Common.FT_Err_Unlisted_Object                = 0x41;

/* stream errors */
FT_Common.FT_Err_Cannot_Open_Stream             = 0x51;
FT_Common.FT_Err_Invalid_Stream_Seek            = 0x52;
FT_Common.FT_Err_Invalid_Stream_Skip            = 0x53;
FT_Common.FT_Err_Invalid_Stream_Read            = 0x54;
FT_Common.FT_Err_Invalid_Stream_Operation       = 0x55;
FT_Common.FT_Err_Invalid_Frame_Operation        = 0x56;
FT_Common.FT_Err_Nested_Frame_Access            = 0x57;
FT_Common.FT_Err_Invalid_Frame_Read             = 0x58;

/* raster errors */
FT_Common.FT_Err_Raster_Uninitialized           = 0x60;
FT_Common.FT_Err_Raster_Corrupted               = 0x61;
FT_Common.FT_Err_Raster_Overflow                = 0x62;
FT_Common.FT_Err_Raster_Negative_Height         = 0x63;

/* cache errors */
FT_Common.FT_Err_Too_Many_Caches                = 0x70;

/* TrueType and SFNT errors */
FT_Common.FT_Err_Invalid_Opcode                 = 0x80;
FT_Common.FT_Err_Too_Few_Arguments              = 0x81;
FT_Common.FT_Err_Stack_Overflow                 = 0x82;
FT_Common.FT_Err_Code_Overflow                  = 0x83;
FT_Common.FT_Err_Bad_Argument                   = 0x84;
FT_Common.FT_Err_Divide_By_Zero                 = 0x85;
FT_Common.FT_Err_Invalid_Reference              = 0x86;
FT_Common.FT_Err_Debug_OpCode                   = 0x87;
FT_Common.FT_Err_ENDF_In_Exec_Stream            = 0x88;
FT_Common.FT_Err_Nested_DEFS                    = 0x89;
FT_Common.FT_Err_Invalid_CodeRange              = 0x8A;
FT_Common.FT_Err_Execution_Too_Long             = 0x8B;
FT_Common.FT_Err_Too_Many_Function_Defs         = 0x8C;
FT_Common.FT_Err_Too_Many_Instruction_Defs      = 0x8D;
FT_Common.FT_Err_Table_Missing                  = 0x8E;
FT_Common.FT_Err_Horiz_Header_Missing           = 0x8F;
FT_Common.FT_Err_Locations_Missing              = 0x90;
FT_Common.FT_Err_Name_Table_Missing             = 0x91;
FT_Common.FT_Err_CMap_Table_Missing             = 0x92;
FT_Common.FT_Err_Hmtx_Table_Missing             = 0x93;
FT_Common.FT_Err_Post_Table_Missing             = 0x94;
FT_Common.FT_Err_Invalid_Horiz_Metrics          = 0x95;
FT_Common.FT_Err_Invalid_CharMap_Format         = 0x96;
FT_Common.FT_Err_Invalid_PPem                   = 0x97;
FT_Common.FT_Err_Invalid_Vert_Metrics           = 0x98;
FT_Common.FT_Err_Could_Not_Find_Context         = 0x99;
FT_Common.FT_Err_Invalid_Post_Table_Format      = 0x9A;
FT_Common.FT_Err_Invalid_Post_Table             = 0x9B;

/* CFF, CID, and Type 1 errors */
FT_Common.FT_Err_Syntax_Error                   = 0xA0;
FT_Common.FT_Err_Stack_Underflow                = 0xA1;
FT_Common.FT_Err_Ignore                         = 0xA2;
FT_Common.FT_Err_No_Unicode_Glyph_Name          = 0xA3;

/* BDF errors */
FT_Common.FT_Err_Missing_Startfont_Field        = 0xB0;
FT_Common.FT_Err_Missing_Font_Field             = 0xB1;
FT_Common.FT_Err_Missing_Size_Field             = 0xB2;
FT_Common.FT_Err_Missing_Fontboundingbox_Field  = 0xB3;
FT_Common.FT_Err_Missing_Chars_Field            = 0xB4;
FT_Common.FT_Err_Missing_Startchar_Field        = 0xB5;
FT_Common.FT_Err_Missing_Encoding_Field         = 0xB6;
FT_Common.FT_Err_Missing_Bbx_Field              = 0xB7;
FT_Common.FT_Err_Bbx_Too_Big                    = 0xB8;
FT_Common.FT_Err_Corrupted_Font_Header          = 0xB9;
FT_Common.FT_Err_Corrupted_Font_Glyphs          = 0xBA;

FT_Common.FT_Mod_Err                            = 0x100;

//
FT_Common.BDF_PROPERTY_TYPE_NONE     = 0;
FT_Common.BDF_PROPERTY_TYPE_ATOM     = 1;
FT_Common.BDF_PROPERTY_TYPE_INTEGER  = 2;
FT_Common.BDF_PROPERTY_TYPE_CARDINAL = 3;

//
FT_Common.TT_CMAP_FLAG_UNSORTED     = 1;
FT_Common.TT_CMAP_FLAG_OVERLAPPING  = 2;

FT_Common.m_c = 0x7F;
FT_Common.m_s = 0x7FFF;
FT_Common.m_i = 0x7FFFFFFF;
FT_Common.a_c = 256;
FT_Common.a_s = 65536;
FT_Common.a_i = 4294967296;

// base
FT_Common.FT_MAX_CHARMAP_CACHEABLE = 15;

FT_Common.TT_PLATFORM_APPLE_UNICODE = 0;
FT_Common.TT_PLATFORM_MACINTOSH = 1;
FT_Common.TT_PLATFORM_ISO = 2;
FT_Common.TT_PLATFORM_MICROSOFT = 3;
FT_Common.TT_PLATFORM_CUSTOM = 4;
FT_Common.TT_PLATFORM_ADOBE = 7;

//
FT_Common.TT_MAC_ID_ROMAN = 0;
//
FT_Common.TT_MS_ID_SYMBOL_CS = 0;
FT_Common.TT_MS_ID_UNICODE_CS = 1;
FT_Common.TT_MS_ID_SJIS = 2;
FT_Common.TT_MS_ID_GB2312 = 3;
FT_Common.TT_MS_ID_BIG_5 = 4;
FT_Common.TT_MS_ID_WANSUNG = 5;
FT_Common.TT_MS_ID_JOHAB = 6;
FT_Common.TT_MS_ID_UCS_4 = 10;

FT_Common.TT_APPLE_ID_DEFAULT = 0;
FT_Common.TT_APPLE_ID_UNICODE_1_1 = 1;
FT_Common.TT_APPLE_ID_ISO_10646 = 2;
FT_Common.TT_APPLE_ID_UNICODE_2_0 = 3;
FT_Common.TT_APPLE_ID_UNICODE_32 = 4;
FT_Common.TT_APPLE_ID_VARIANT_SELECTOR = 5;

// true type tags
FT_Common.TTAG_avar = FT_MAKE_TAG("a","v","a","r");
FT_Common.TTAG_BASE = FT_MAKE_TAG("B","A","S","E");
FT_Common.TTAG_bdat = FT_MAKE_TAG("b","d","a","t");
FT_Common.TTAG_BDF  = FT_MAKE_TAG("B","D","F"," ");
FT_Common.TTAG_bhed = FT_MAKE_TAG("b","h","e","d");
FT_Common.TTAG_bloc = FT_MAKE_TAG("b","l","o","c");
FT_Common.TTAG_bsln = FT_MAKE_TAG("b","s","l","n");
FT_Common.TTAG_CFF  = FT_MAKE_TAG("C","F","F"," ");
FT_Common.TTAG_CID  = FT_MAKE_TAG("C","I","D"," ");
FT_Common.TTAG_cmap = FT_MAKE_TAG("c","m","a","p");
FT_Common.TTAG_cvar = FT_MAKE_TAG("c","v","a","r");
FT_Common.TTAG_cvt  = FT_MAKE_TAG("c","v","t"," ");
FT_Common.TTAG_DSIG = FT_MAKE_TAG("D","S","I","G");
FT_Common.TTAG_EBDT = FT_MAKE_TAG("E","B","D","T");
FT_Common.TTAG_EBLC = FT_MAKE_TAG("E","B","L","C");
FT_Common.TTAG_EBSC = FT_MAKE_TAG("E","B","S","C");
FT_Common.TTAG_feat = FT_MAKE_TAG("f","e","a","t");
FT_Common.TTAG_FOND = FT_MAKE_TAG("F","O","N","D");
FT_Common.TTAG_fpgm = FT_MAKE_TAG("f","p","g","m");
FT_Common.TTAG_fvar = FT_MAKE_TAG("f","v","a","r");
FT_Common.TTAG_gasp = FT_MAKE_TAG("g","a","s","p");
FT_Common.TTAG_GDEF = FT_MAKE_TAG("G","D","E","F");
FT_Common.TTAG_glyf = FT_MAKE_TAG("g","l","y","f");
FT_Common.TTAG_GPOS = FT_MAKE_TAG("G","P","O","S");
FT_Common.TTAG_GSUB = FT_MAKE_TAG("G","S","U","B");
FT_Common.TTAG_gvar = FT_MAKE_TAG("g","v","a","r");
FT_Common.TTAG_hdmx = FT_MAKE_TAG("h","d","m","x");
FT_Common.TTAG_head = FT_MAKE_TAG("h","e","a","d");
FT_Common.TTAG_hhea = FT_MAKE_TAG("h","h","e","a");
FT_Common.TTAG_hmtx = FT_MAKE_TAG("h","m","t","x");
FT_Common.TTAG_JSTF = FT_MAKE_TAG("J","S","T","F");
FT_Common.TTAG_just = FT_MAKE_TAG("j","u","s","t");
FT_Common.TTAG_kern = FT_MAKE_TAG("k","e","r","n");
FT_Common.TTAG_lcar = FT_MAKE_TAG("l","c","a","r");
FT_Common.TTAG_loca = FT_MAKE_TAG("l","o","c","a");
FT_Common.TTAG_LTSH = FT_MAKE_TAG("L","T","S","H");
FT_Common.TTAG_LWFN = FT_MAKE_TAG("L","W","F","N");
FT_Common.TTAG_MATH = FT_MAKE_TAG("M","A","T","H");
FT_Common.TTAG_maxp = FT_MAKE_TAG("m","a","x","p");
FT_Common.TTAG_META = FT_MAKE_TAG("M","E","T","A");
FT_Common.TTAG_MMFX = FT_MAKE_TAG("M","M","F","X");
FT_Common.TTAG_MMSD = FT_MAKE_TAG("M","M","S","D");
FT_Common.TTAG_mort = FT_MAKE_TAG("m","o","r","t");
FT_Common.TTAG_morx = FT_MAKE_TAG("m","o","r","x");
FT_Common.TTAG_name = FT_MAKE_TAG("n","a","m","e");
FT_Common.TTAG_opbd = FT_MAKE_TAG("o","p","b","d");
FT_Common.TTAG_OS2  = FT_MAKE_TAG("O","S","/","2");
FT_Common.TTAG_OTTO = FT_MAKE_TAG("O","T","T","O");
FT_Common.TTAG_PCLT = FT_MAKE_TAG("P","C","L","T");
FT_Common.TTAG_POST = FT_MAKE_TAG("P","O","S","T");
FT_Common.TTAG_post = FT_MAKE_TAG("p","o","s","t");
FT_Common.TTAG_prep = FT_MAKE_TAG("p","r","e","p");
FT_Common.TTAG_prop = FT_MAKE_TAG("p","r","o","p");
FT_Common.TTAG_sfnt = FT_MAKE_TAG("s","f","n","t");
FT_Common.TTAG_SING = FT_MAKE_TAG("S","I","N","G");
FT_Common.TTAG_trak = FT_MAKE_TAG("t","r","a","k");
FT_Common.TTAG_true = FT_MAKE_TAG("t","r","u","e");
FT_Common.TTAG_ttc  = FT_MAKE_TAG("t","t","c"," ");
FT_Common.TTAG_ttcf = FT_MAKE_TAG("t","t","c","f");
FT_Common.TTAG_TYP1 = FT_MAKE_TAG("T","Y","P","1");
FT_Common.TTAG_typ1 = FT_MAKE_TAG("t","y","p","1");
FT_Common.TTAG_VDMX = FT_MAKE_TAG("V","D","M","X");
FT_Common.TTAG_vhea = FT_MAKE_TAG("v","h","e","a");
FT_Common.TTAG_vmtx = FT_MAKE_TAG("v","m","t","x");

//
FT_Common.FT_FACE_FLAG_SCALABLE         = (1 << 0);
FT_Common.FT_FACE_FLAG_FIXED_SIZES      = (1 << 1);
FT_Common.FT_FACE_FLAG_FIXED_WIDTH      = (1 << 2);
FT_Common.FT_FACE_FLAG_SFNT             = (1 << 3);
FT_Common.FT_FACE_FLAG_HORIZONTAL       = (1 << 4);
FT_Common.FT_FACE_FLAG_VERTICAL         = (1 << 5);
FT_Common.FT_FACE_FLAG_KERNING          = (1 << 6);
FT_Common.FT_FACE_FLAG_FAST_GLYPHS      = (1 << 7);
FT_Common.FT_FACE_FLAG_MULTIPLE_MASTERS = (1 << 8);
FT_Common.FT_FACE_FLAG_GLYPH_NAMES      = (1 << 9);
FT_Common.FT_FACE_FLAG_EXTERNAL_STREAM  = (1 << 10);
FT_Common.FT_FACE_FLAG_HINTER           = (1 << 11);
FT_Common.FT_FACE_FLAG_CID_KEYED        = (1 << 12);
FT_Common.FT_FACE_FLAG_TRICKY           = (1 << 13);

FT_Common.FT_SIZE_REQUEST_TYPE_NOMINAL   = 0;
FT_Common.FT_SIZE_REQUEST_TYPE_REAL_DIM  = 1;
FT_Common.FT_SIZE_REQUEST_TYPE_BBOX      = 2;
FT_Common.FT_SIZE_REQUEST_TYPE_CELL      = 3;
FT_Common.FT_SIZE_REQUEST_TYPE_SCALES    = 4;
FT_Common.FT_SIZE_REQUEST_TYPE_MAX       = 5;

FT_Common.FT_LOAD_DEFAULT                      = 0x0;
FT_Common.FT_LOAD_NO_SCALE                     = 0x1;
FT_Common.FT_LOAD_NO_HINTING                   = 0x2;
FT_Common.FT_LOAD_RENDER                       = 0x4;
FT_Common.FT_LOAD_NO_BITMAP                    = 0x8;
FT_Common.FT_LOAD_VERTICAL_LAYOUT              = 0x10;
FT_Common.FT_LOAD_FORCE_AUTOHINT               = 0x20;
FT_Common.FT_LOAD_CROP_BITMAP                  = 0x40;
FT_Common.FT_LOAD_PEDANTIC                     = 0x80;
FT_Common.FT_LOAD_IGNORE_GLOBAL_ADVANCE_WIDTH  = 0x200;
FT_Common.FT_LOAD_NO_RECURSE                   = 0x400;
FT_Common.FT_LOAD_IGNORE_TRANSFORM             = 0x800;
FT_Common.FT_LOAD_MONOCHROME                   = 0x1000;
FT_Common.FT_LOAD_LINEAR_DESIGN                = 0x2000;
FT_Common.FT_LOAD_NO_AUTOHINT                  = 0x8000;

FT_Common.FT_GLYPH_FORMAT_NONE       = 0;
FT_Common.FT_GLYPH_FORMAT_COMPOSITE  = FT_MAKE_TAG("c","o","m","p");
FT_Common.FT_GLYPH_FORMAT_BITMAP     = FT_MAKE_TAG("b","i","t","s");
FT_Common.FT_GLYPH_FORMAT_OUTLINE    = FT_MAKE_TAG("o","u","t","l");
FT_Common.FT_GLYPH_FORMAT_PLOTTER    = FT_MAKE_TAG("p","l","o","t");

FT_Common.FT_RENDER_MODE_NORMAL      = 0;
FT_Common.FT_RENDER_MODE_LIGHT       = 1;
FT_Common.FT_RENDER_MODE_MONO        = 2;
FT_Common.FT_RENDER_MODE_LCD         = 3;
FT_Common.FT_RENDER_MODE_LCD_V       = 4;
FT_Common.FT_RENDER_MODE_MAX         = 5;

FT_Common.FT_LOAD_ADVANCE_ONLY       = 0x100;
FT_Common.FT_LOAD_SBITS_ONLY         = 0x4000;

FT_Common.FT_KERNING_DEFAULT         = 0;
FT_Common.FT_KERNING_UNFITTED        = 1;
FT_Common.FT_KERNING_UNSCALED        = 2;

//
FT_Common.TT_NAME_ID_COPYRIGHT           = 0;
FT_Common.TT_NAME_ID_FONT_FAMILY         = 1;
FT_Common.TT_NAME_ID_FONT_SUBFAMILY      = 2;
FT_Common.TT_NAME_ID_UNIQUE_ID           = 3;
FT_Common.TT_NAME_ID_FULL_NAME           = 4;
FT_Common.TT_NAME_ID_VERSION_STRING      = 5;
FT_Common.TT_NAME_ID_PS_NAME             = 6;
FT_Common.TT_NAME_ID_TRADEMARK           = 7;

FT_Common.TT_NAME_ID_MANUFACTURER        = 8;
FT_Common.TT_NAME_ID_DESIGNER            = 9;
FT_Common.TT_NAME_ID_DESCRIPTION         = 10;
FT_Common.TT_NAME_ID_VENDOR_URL          = 11;
FT_Common.TT_NAME_ID_DESIGNER_URL        = 12;
FT_Common.TT_NAME_ID_LICENSE             = 13;
FT_Common.TT_NAME_ID_LICENSE_URL         = 14;

FT_Common.TT_NAME_ID_PREFERRED_FAMILY     = 16;
FT_Common.TT_NAME_ID_PREFERRED_SUBFAMILY  = 17;
FT_Common.TT_NAME_ID_MAC_FULL_NAME        = 18;

FT_Common.TT_NAME_ID_SAMPLE_TEXT          = 19;

FT_Common.TT_NAME_ID_CID_FINDFONT_NAME    = 20;

FT_Common.TT_NAME_ID_WWS_FAMILY           = 21;
FT_Common.TT_NAME_ID_WWS_SUBFAMILY        = 22;

//
FT_Common.FT_STYLE_FLAG_ITALIC   = 1;
FT_Common.FT_STYLE_FLAG_BOLD     = 2;

//
FT_Common.FT_RASTER_FLAG_DEFAULT = 0;
FT_Common.FT_RASTER_FLAG_AA      = 1;
FT_Common.FT_RASTER_FLAG_DIRECT  = 2;
FT_Common.FT_RASTER_FLAG_CLIP    = 4;

//
FT_Common.FT_CURVE_TAG_ON        = 1;
FT_Common.FT_CURVE_TAG_CONIC     = 0;
FT_Common.FT_CURVE_TAG_CUBIC     = 2;

//
FT_Common.FT_OUTLINE_NONE             = 0x0;
FT_Common.FT_OUTLINE_OWNER            = 0x1;
FT_Common.FT_OUTLINE_EVEN_ODD_FILL    = 0x2;
FT_Common.FT_OUTLINE_REVERSE_FILL     = 0x4;
FT_Common.FT_OUTLINE_IGNORE_DROPOUTS  = 0x8;
FT_Common.FT_OUTLINE_SMART_DROPOUTS   = 0x10;
FT_Common.FT_OUTLINE_INCLUDE_STUBS    = 0x20;

FT_Common.FT_OUTLINE_HIGH_PRECISION   = 0x100;
FT_Common.FT_OUTLINE_SINGLE_PASS      = 0x200;

//
FT_Common.FT_GLYPH_OWN_BITMAP         = 0x1;

//
FT_Common.FT_PIXEL_MODE_NONE     = 0;
FT_Common.FT_PIXEL_MODE_MONO     = 1;
FT_Common.FT_PIXEL_MODE_GRAY     = 2;
FT_Common.FT_PIXEL_MODE_GRAY2    = 3;
FT_Common.FT_PIXEL_MODE_GRAY4    = 4;
FT_Common.FT_PIXEL_MODE_LCD      = 5;
FT_Common.FT_PIXEL_MODE_LCD_V    = 6;
FT_Common.FT_PIXEL_MODE_MAX      = 7;

FT_Common.ErrorLongJump          = -100;

//
FT_Common.FT_GLYPH_BBOX_UNSCALED  = 0;
FT_Common.FT_GLYPH_BBOX_SUBPIXELS = 0;
FT_Common.FT_GLYPH_BBOX_GRIDFIT   = 1;
FT_Common.FT_GLYPH_BBOX_TRUNCATE  = 2;
FT_Common.FT_GLYPH_BBOX_PIXELS    = 3;

// GX_TupleCountFlags
FT_Common.GX_TC_TUPLES_SHARE_POINT_NUMBERS = 0x8000;
FT_Common.GX_TC_RESERVED_TUPLE_FLAGS       = 0x7000;
FT_Common.GX_TC_TUPLE_COUNT_MASK           = 0x0FFF;

// GX_TupleIndexFlags
FT_Common.GX_TI_EMBEDDED_TUPLE_COORD  = 0x8000;
FT_Common.GX_TI_INTERMEDIATE_TUPLE    = 0x4000;
FT_Common.GX_TI_PRIVATE_POINT_NUMBERS = 0x2000;
FT_Common.GX_TI_RESERVED_TUPLE_FLAG   = 0x1000;
FT_Common.GX_TI_TUPLE_INDEX_MASK      = 0x0FFF;

//
FT_Common.TTAG_wght = FT_MAKE_TAG("w","g","h","t");
FT_Common.TTAG_wdth = FT_MAKE_TAG("w","d","t","h");
FT_Common.TTAG_opsz = FT_MAKE_TAG("o","p","s","z");
FT_Common.TTAG_slnt = FT_MAKE_TAG("s","l","n","t");

//
FT_Common.FT_PARAM_TAG_UNPATENTED_HINTING = FT_MAKE_TAG("u","n","p","a");

// ??? ??? ???? ????????? ?? cmap
FT_Common.FT_CMAP_0      = 0;
FT_Common.FT_CMAP_1      = 1;
FT_Common.FT_CMAP_4      = 2;
FT_Common.FT_CMAP_12     = 3;
FT_Common.FT_CMAP_13     = 4;
FT_Common.FT_CMAP_14     = 5;